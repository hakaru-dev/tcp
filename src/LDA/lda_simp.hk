fn topic_prior array(prob): 
 fn word_prior array(prob): 
  fn numDocs nat: 
   fn w array(nat): 
    fn doc array(nat): 
     fn z array(nat): 
      fn wordUpdate nat: 
       (match ((wordUpdate < size(w)) && 
               (doc[wordUpdate] < numDocs) && 
               (w[wordUpdate] < size(word_prior))): 
         true: 
          weight(((product d from 0 to size(topic_prior): 
                    (product it from 0 to size(word_prior): 
                      (product j from 0 to (summate dB from 0 to size(w): 
                                             (match (dB == wordUpdate): 
                                               true: 0
                                               false: 
                                                (match ((d == z[dB]) && (it == w[dB])): 
                                                  true: 1
                                                  false: 0))): 
                        (nat2prob(j) + word_prior[it]))))
                   * 
                  (product d from 0 to numDocs: 
                    (product iN from 0 to size(topic_prior): 
                      (product j from 0 to (summate dB from 0 to size(w): 
                                             (match (dB == wordUpdate): 
                                               true: 0
                                               false: 
                                                (match ((d == doc[dB]) && (iN == z[dB])): 
                                                  true: 1
                                                  false: 0))): 
                        (nat2prob(j) + topic_prior[iN]))))
                   / 
                  (product d from 0 to numDocs: 
                    (product iN from 0 to (summate dB from 0 to size(w): 
                                            (match (dB == wordUpdate): 
                                              true: 0
                                              false: 
                                               (match (d == doc[dB]): 
                                                 true: 1
                                                 false: 0))): 
                      (nat2prob(iN)
                        + 
                       (summate dB from 0 to size(topic_prior): topic_prior[dB]))))
                   / 
                  (product d from 0 to size(topic_prior): 
                    (product it from 0 to (summate dB from 0 to size(w): 
                                            (match (dB == wordUpdate): 
                                              true: 0
                                              false: 
                                               (match (d == z[dB]): 
                                                 true: 1
                                                 false: 0))): 
                      (nat2prob(it)
                        + 
                       (summate dB from 0 to size(word_prior): word_prior[dB]))))),
                 categorical(array zNewh of size(topic_prior): 
                              ((nat2prob((summate dB from 0 to size(w): 
                                           (match (dB == wordUpdate): 
                                             true: 0
                                             false: 
                                              (match ((zNewh == z[dB]) && 
                                                      (w[wordUpdate] == w[dB])): 
                                                true: 1
                                                false: 0))))
                                 + 
                                word_prior[w[wordUpdate]])
                                * 
                               (nat2prob((summate dB from 0 to size(w): 
                                           (match (dB == wordUpdate): 
                                             true: 0
                                             false: 
                                              (match ((doc[wordUpdate] == doc[dB]) && 
                                                      (zNewh == z[dB])): 
                                                true: 1
                                                false: 0))))
                                 + 
                                topic_prior[zNewh])
                                / 
                               (nat2prob((summate dB from 0 to size(w): 
                                           (match (dB == wordUpdate): 
                                             true: 0
                                             false: 
                                              (match (doc[wordUpdate] == doc[dB]): 
                                                true: 1
                                                false: 0))))
                                 + 
                                (summate dB from 0 to size(topic_prior): topic_prior[dB]))
                                / 
                               (nat2prob((summate dB from 0 to size(w): 
                                           (match (dB == wordUpdate): 
                                             true: 0
                                             false: 
                                              (match (zNewh == z[dB]): 
                                                true: 1
                                                false: 0))))
                                 + 
                                (summate dB from 0 to size(word_prior): word_prior[dB])))))
         false: reject. measure(nat))
